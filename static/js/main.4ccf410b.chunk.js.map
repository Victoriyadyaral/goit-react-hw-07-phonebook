{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/filter/Filter.module.css","components/contactListItem/ContactListItem.module.css","components/container/Container.module.css","components/contactList/ContactList.module.css","redux/actions.js","redux/reducer.js","redux/store.js","components/container/Container.js","redux/operations.js","redux/selectors.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","App.js","index.js"],"names":["module","exports","phonebookActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","toast","warn","filter","id","loading","error","combineReducers","store","configureStore","reducer","phonebook","phonebookReducer","devTools","process","Container","children","className","s","container","axios","defaults","baseURL","contactOperations","fetchContacts","dispatch","a","get","data","addContact","name","number","contact","shortid","generate","post","deleteContact","contactId","delete","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactForm","useState","setName","setNumber","nameInputId","phoneNumberInputId","useDispatch","useSelector","handleInputChange","event","currentTarget","value","reset","onSubmit","preventDefault","find","success","htmlFor","label","type","input","onChange","autoComplete","button","color","size","Filter","castomInput","e","ContactListItem","useEffect","contactsOperations","contactsItem","onClick","onDeleteContact","ContactList","contactList","map","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ccf410b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2FsaR\",\"input\":\"ContactForm_input__2AOWY\",\"button\":\"ContactForm_button__2Nca_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__ms_0I\",\"label\":\"Filter_label__38-TS\",\"input\":\"Filter_input__1Hwq_\",\"castomInput\":\"Filter_castomInput__3Isvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactListItem_contactsItem__2jQg9\",\"button\":\"ContactListItem_button__2HTtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1qw7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3bkAf\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('phonebook/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('phonebook/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('phonebook/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('phonebook/addContactRequest');\r\nconst addContactSuccess = createAction('phonebook/addContactSuccess');\r\nconst addContactError = createAction('phonebook/addContactError');\r\n\r\nconst deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\r\nconst deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nconst phonebookActions = {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter\r\n};\r\n\r\nexport default phonebookActions;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\nimport phonebookActions from './actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [phonebookActions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [phonebookActions.addContactSuccess]: (state, { payload }) => {\r\n    //toast.success('Contact has been added to your phonebook!');\r\n    return [...state, payload]\r\n  },\r\n  [phonebookActions.deleteContactSuccess]: (state, { payload }) => {\r\n    toast.warn(\"Contact deleted from your phonebook!\");\r\n      return state.filter(({ id }) => id !== payload);\r\n  },\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [phonebookActions.fetchContactsRequest]: () => true,\r\n  [phonebookActions.fetchContactsSuccess]: () => false,\r\n  [phonebookActions.fetchContactsError]: () => false,\r\n  [phonebookActions.addContactRequest]: () => true,\r\n  [phonebookActions.addContactSuccess]: () => false,\r\n  [phonebookActions.addContactError]: () => false,\r\n  [phonebookActions.deleteContactRequest]: () => true,\r\n  [phonebookActions.deleteContactSuccess]: () => false,\r\n  [phonebookActions.deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [phonebookActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import axios from 'axios';\r\nimport shortid from 'shortid';\r\nimport phonebookActions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(phonebookActions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(phonebookActions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(phonebookActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  };\r\n\r\n    dispatch(phonebookActions.addContactRequest());\r\n\r\n    try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(phonebookActions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(phonebookActions.addContactError(error));\r\n  }\r\n\r\n//   axios\r\n//     .post('/contacts', contact)\r\n//     .then(({ data }) => dispatch(phonebookActions.addContactSuccess(data)))\r\n//     .catch(error => dispatch(phonebookActions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(phonebookActions.deleteContactRequest());\r\n\r\n    \r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(phonebookActions.deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(phonebookActions.deleteContactError(error));\r\n  }\r\n//   axios\r\n//     .delete(`/contacts/${contactId}`)\r\n//     .then(() => dispatch(phonebookActions.deleteContactSuccess(contactId)))\r\n//     .catch(error => dispatch(phonebookActions.deleteContactError(error)));\r\n};\r\n\r\nconst contactOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default contactOperations;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const isLoading = state => state.phonebook.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const getFiteredContacts = contacts => {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      return contacts.filter(text =>\r\n        text.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    };\r\n\r\n    return getFiteredContacts(contacts);\r\n  },\r\n);","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport contactOperations from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport shortid from 'shortid';\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm() {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  \r\n  const nameInputId = shortid.generate();\r\n  const phoneNumberInputId = shortid.generate();\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (name === '') {\r\n      toast.warn(\"Please enter the contact's name!\");\r\n      return;\r\n    }\r\n\r\n    if (number === '') {\r\n      toast.warn(\"Please enter the contact's phone number!\");\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      toast.warn(`${name} is already in contacts.`);\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(contactOperations.addContact(name, number));\r\n    toast.success('Contact has been added to your phonebook!');\r\n    reset();\r\n    };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n          <form onSubmit = {handleSubmit}>\r\n            <label  htmlFor={nameInputId} className={s.label}>\r\n            Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            value={name}\r\n            onChange = {handleInputChange}\r\n            //required\r\n            id={nameInputId}\r\n            autoComplete = \"off\"\r\n          />\r\n           </label>\r\n                \r\n            <label htmlFor={phoneNumberInputId} className={s.label} >\r\n            Number \r\n            <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            value={number}\r\n            onChange = {handleInputChange}\r\n            //required\r\n            id={phoneNumberInputId}\r\n            autoComplete = \"off\"\r\n        />       \r\n           </label>\r\n                \r\n          <button\r\n          className={s.button}\r\n          type=\"submit\"\r\n          //disabled={name === '' || number === ''}\r\n          >\r\n            Add contact  <ImCheckmark color=\"rgb(11, 100, 11)\" size=\"30px\"/>\r\n          </button>\r\n        </form>\r\n        )\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport phonebookActions from '../../redux/actions';\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(phonebookActions.changeFilter(e.currentTarget.value));\r\n\r\n  return (\r\n  <div className = {s.filter}>\r\n  <label className={s.label}>\r\n      Find contacts by name\r\n      <div className={s.castomInput}>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input}\r\n        />\r\n     </div>\r\n  </label>\r\n  </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ImBin, ImRadioChecked2 } from \"react-icons/im\";\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/operations';\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n    }, [dispatch]);\r\n    \r\n    const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n    return (\r\n            <li\r\n            className={s.contactsItem}\r\n            >\r\n            <ImRadioChecked2 color=\"rgb(11, 100, 11)\" size=\"10px\"/> {name}:  {number}\r\n            \r\n            <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            aria-label=\"Delete contact\"    \r\n            onClick={() => onDeleteContact(id)}\r\n            >\r\n            <ImBin color=\"rgb(11, 100, 11)\" size=\"30px\"/>\r\n            </button>\r\n            </li>\r\n    )\r\n};\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func,\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport s from \"./ContactList.module.css\";\r\n\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport contactOperations from '../../redux/operations';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\n\r\nconst ContactList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => dispatch(contactOperations.fetchContacts()), [dispatch]);\r\n\r\n    const contacts = useSelector(getVisibleContacts);\r\n    \r\n    return (\r\n        <ul className={s.contactList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactListItem\r\n                    key={id}\r\n                    id={id}\r\n                    name={name}\r\n                    number={number}\r\n                />\r\n            ))}\r\n            </ul>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n}\r\n\r\nexport default ContactList;","\nimport React from 'react';\nimport { ToastContainer } from 'react-toastify';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\n//import { isLoading } from './redux/selectors';\n//import contactOperations from './redux/operations';\nimport Container from './components/container/Container';\nimport ContactForm from './components/contactForm/ContactForm';\nimport Filter from './components/filter/Filter';\nimport ContactList from './components/contactList/ContactList';\n//import Loader from './components/Loader/Loader';\n\nfunction App() {\n  //const loading = useSelector(isLoading);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(contactOperations.fetchContacts());\n  // }, [dispatch]);\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm/>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />\n        <h2>Contacts</h2>\n        <Filter />\n        {/* {loading && <Loader />} */}\n        <ContactList/>\n     </Container>\n    );\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n         <BrowserRouter>\n        <App />\n        </BrowserRouter>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}